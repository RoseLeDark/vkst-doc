.TH "include/Allocator/vkstAllocatorTraits.hpp" 3 "vkbst" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/Allocator/vkstAllocatorTraits.hpp
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <type_traits>\fP
.br
\fC#include <cstdlib>\fP
.br
\fC#include <memory>\fP
.br
\fC#include '\&.\&./vkstAlignment\&.hpp'\fP
.br

.SS "Datenstrukturen"

.in +1c
.ti -1c
.RI "struct \fBvkst::std_allocator_tag\fP"
.br
.ti -1c
.RI "struct \fBvkst::nodeleter_allocator_tag\fP"
.br
.ti -1c
.RI "struct \fBvkst::internal::allocator_traits< TAlloC >\fP"
.br
.RI "Traits for a given allocator type\&. "
.ti -1c
.RI "struct \fBvkst::is_thread_safe_allocator< TAlloC >\fP"
.br
.RI "Checks whether a given allocator is thread-safe\&. "
.ti -1c
.RI "class \fBvkst::allocator_traits< TAllocator >\fP"
.br
.RI "Default specialization of \fC\fBallocator_traits\fP\fP for a given allocator\&. "
.in -1c
.SS "Namensbereiche"

.in +1c
.ti -1c
.RI "namespace \fBvkst\fP"
.br
.ti -1c
.RI "namespace \fBvkst::internal\fP"
.br
.in -1c
.SS "Funktionen"

.in +1c
.ti -1c
.RI "template<class TAlloC > void * \fBvkst::allocate\fP (const TAlloC &alloc, size_t size, size_t alignment, \fBvkst::std_allocator_tag\fP)"
.br
.RI "Allocates memory using a given allocator with a \fC\fBstd_allocator_tag\fP\fP\&. "
.ti -1c
.RI "template<class TAlloC > void * \fBvkst::allocate\fP (const TAlloC &alloc, size_t size, size_t alignment, \fBvkst::nodeleter_allocator_tag\fP)"
.br
.RI "Allocates memory using a given allocator with a \fC\fBnodeleter_allocator_tag\fP\fP\&. "
.ti -1c
.RI "template<class TAlloC > void * \fBvkst::deallocate\fP (const TAlloC &alloc, void *address, size_t size, \fBvkst::std_allocator_tag\fP)"
.br
.RI "Deallocates memory using a given allocator with a \fC\fBstd_allocator_tag\fP\fP\&. "
.ti -1c
.RI "template<class TAlloC > void * \fBvkst::deallocate\fP (const TAlloC &alloc, void *address, size_t size, \fBvkst::nodeleter_allocator_tag\fP)"
.br
.RI "Deallocates memory using a given allocator with a \fC\fBnodeleter_allocator_tag\fP\fP\&. "
.in -1c
.SH "Autor"
.PP 
Automatisch erzeugt von Doxygen f√ºr vkbst aus dem Quellcode\&.
