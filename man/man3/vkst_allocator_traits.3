.TH "vkst::allocator_traits< TAllocator >" 3 "vkbst" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vkst::allocator_traits< TAllocator > \- Default specialization of \fC\fBallocator_traits\fP\fP for a given allocator\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <vkstAllocatorTraits\&.hpp>\fP
.SS "Öffentliche Typen"

.in +1c
.ti -1c
.RI "using \fBallocator_type\fP = typename \fBinternal::allocator_traits\fP< TAllocator >::allocator_type"
.br
.ti -1c
.RI "using \fBpointer\fP = typename \fBinternal::allocator_traits\fP< TAllocator >::pointer"
.br
.ti -1c
.RI "using \fBsize_type\fP = typename \fBinternal::allocator_traits\fP< TAllocator >::size_type"
.br
.in -1c
.SS "Öffentliche, statische Methoden"

.in +1c
.ti -1c
.RI "static \fBpointer\fP \fBallocate_node\fP (\fBallocator_type\fP &state, \fBsize_type\fP size, \fBsize_type\fP alignment)"
.br
.RI "Allocates a node with the specified size and alignment\&. "
.ti -1c
.RI "static \fBpointer\fP \fBallocate_array\fP (\fBallocator_type\fP &state, \fBsize_type\fP count, \fBsize_type\fP size, \fBsize_type\fP alignment)"
.br
.RI "Allocates an array with the specified count, size, and alignment\&. "
.ti -1c
.RI "static void \fBdeallocate_node\fP (\fBallocator_type\fP &state, \fBpointer\fP node, \fBsize_type\fP size) noexcept"
.br
.RI "Deallocates a node\&. "
.ti -1c
.RI "static void \fBdeallocate_array\fP (\fBallocator_type\fP &state, \fBpointer\fP node, \fBsize_type\fP count, \fBsize_type\fP size) noexcept"
.br
.RI "Deallocates an array\&. "
.ti -1c
.RI "static \fBsize_type\fP \fBmax_node_size\fP (const \fBallocator_type\fP &state)"
.br
.RI "Returns the maximum size of a node that can be allocated\&. "
.ti -1c
.RI "static \fBsize_type\fP \fBmax_array_size\fP (const \fBallocator_type\fP &state)"
.br
.RI "Returns the maximum size of an array that can be allocated\&. "
.ti -1c
.RI "static \fBsize_type\fP \fBmax_alignment\fP (const \fBallocator_type\fP &state)"
.br
.RI "Returns the maximum alignment that the allocator can handle\&. "
.in -1c
.SH "Ausführliche Beschreibung"
.PP 

.SS "template<class TAllocator>
.br
class vkst::allocator_traits< TAllocator >"Default specialization of \fC\fBallocator_traits\fP\fP for a given allocator\&. 

This template provides methods for allocating and deallocating nodes and arrays, as well as querying the maximum node size, array size, and alignment\&.
.PP
\fBTemplate-Parameter\fP
.RS 4
\fITAllocator\fP The allocator type\&. 
.RE
.PP

.PP
Definiert in Zeile \fB132\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SH "Dokumentation der benutzerdefinierten Datentypen"
.PP 
.SS "template<class TAllocator > using \fBvkst::allocator_traits\fP< TAllocator >::allocator_type =  typename \fBinternal::allocator_traits\fP<TAllocator>::allocator_type"

.PP
Definiert in Zeile \fB134\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SS "template<class TAllocator > using \fBvkst::allocator_traits\fP< TAllocator >::pointer =  typename \fBinternal::allocator_traits\fP<TAllocator>::pointer"

.PP
Definiert in Zeile \fB135\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SS "template<class TAllocator > using \fBvkst::allocator_traits\fP< TAllocator >::size_type =  typename \fBinternal::allocator_traits\fP<TAllocator>::size_type"

.PP
Definiert in Zeile \fB136\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SH "Dokumentation der Elementfunktionen"
.PP 
.SS "template<class TAllocator > static \fBpointer\fP \fBvkst::allocator_traits\fP< TAllocator >::allocate_array (\fBallocator_type\fP & state, \fBsize_type\fP count, \fBsize_type\fP size, \fBsize_type\fP alignment)\fC [inline]\fP, \fC [static]\fP"

.PP
Allocates an array with the specified count, size, and alignment\&. Calls the allocator's \fCallocate\fP method to allocate an array\&.
.PP
\fBParameter\fP
.RS 4
\fIstate\fP The allocator instance\&. 
.br
\fIcount\fP The number of elements in the array\&. 
.br
\fIsize\fP The size of each element\&. 
.br
\fIalignment\fP The alignment of the array\&. 
.RE
.PP
\fBRückgabe\fP
.RS 4
A pointer to the allocated array\&. 
.RE
.PP

.PP
Definiert in Zeile \fB162\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SS "template<class TAllocator > static \fBpointer\fP \fBvkst::allocator_traits\fP< TAllocator >::allocate_node (\fBallocator_type\fP & state, \fBsize_type\fP size, \fBsize_type\fP alignment)\fC [inline]\fP, \fC [static]\fP"

.PP
Allocates a node with the specified size and alignment\&. Calls the allocator's \fCallocate\fP method to allocate a node\&.
.PP
\fBParameter\fP
.RS 4
\fIstate\fP The allocator instance\&. 
.br
\fIsize\fP The size of the node to allocate\&. 
.br
\fIalignment\fP The alignment of the node\&. 
.RE
.PP
\fBRückgabe\fP
.RS 4
A pointer to the allocated node\&. 
.RE
.PP

.PP
Definiert in Zeile \fB148\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SS "template<class TAllocator > static void \fBvkst::allocator_traits\fP< TAllocator >::deallocate_array (\fBallocator_type\fP & state, \fBpointer\fP node, \fBsize_type\fP count, \fBsize_type\fP size)\fC [inline]\fP, \fC [static]\fP, \fC [noexcept]\fP"

.PP
Deallocates an array\&. Calls the allocator's \fCdeallocate\fP method to deallocate an array\&.
.PP
\fBParameter\fP
.RS 4
\fIstate\fP The allocator instance\&. 
.br
\fInode\fP The pointer to the array to deallocate\&. 
.br
\fIcount\fP The number of elements in the array\&. 
.br
\fIsize\fP The size of each element in the array\&. 
.RE
.PP

.PP
Definiert in Zeile \fB188\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SS "template<class TAllocator > static void \fBvkst::allocator_traits\fP< TAllocator >::deallocate_node (\fBallocator_type\fP & state, \fBpointer\fP node, \fBsize_type\fP size)\fC [inline]\fP, \fC [static]\fP, \fC [noexcept]\fP"

.PP
Deallocates a node\&. Calls the allocator's \fCdeallocate\fP method to deallocate a node\&.
.PP
\fBParameter\fP
.RS 4
\fIstate\fP The allocator instance\&. 
.br
\fInode\fP The pointer to the node to deallocate\&. 
.br
\fIsize\fP The size of the node\&. 
.RE
.PP

.PP
Definiert in Zeile \fB175\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SS "template<class TAllocator > static \fBsize_type\fP \fBvkst::allocator_traits\fP< TAllocator >::max_alignment (const \fBallocator_type\fP & state)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the maximum alignment that the allocator can handle\&. 
.PP
\fBParameter\fP
.RS 4
\fIstate\fP The allocator instance\&. 
.RE
.PP
\fBRückgabe\fP
.RS 4
The maximum alignment\&. 
.RE
.PP

.PP
Definiert in Zeile \fB216\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SS "template<class TAllocator > static \fBsize_type\fP \fBvkst::allocator_traits\fP< TAllocator >::max_array_size (const \fBallocator_type\fP & state)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the maximum size of an array that can be allocated\&. 
.PP
\fBParameter\fP
.RS 4
\fIstate\fP The allocator instance\&. 
.RE
.PP
\fBRückgabe\fP
.RS 4
The maximum size of an array\&. 
.RE
.PP

.PP
Definiert in Zeile \fB207\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.
.SS "template<class TAllocator > static \fBsize_type\fP \fBvkst::allocator_traits\fP< TAllocator >::max_node_size (const \fBallocator_type\fP & state)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the maximum size of a node that can be allocated\&. 
.PP
\fBParameter\fP
.RS 4
\fIstate\fP The allocator instance\&. 
.RE
.PP
\fBRückgabe\fP
.RS 4
The maximum size of a node\&. 
.RE
.PP

.PP
Definiert in Zeile \fB198\fP der Datei \fBvkstAllocatorTraits\&.hpp\fP\&.

.SH "Autor"
.PP 
Automatisch erzeugt von Doxygen für vkbst aus dem Quellcode\&.
