.TH "include/vkstLogging.hpp" 3 "vkbst" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/vkstLogging.hpp
.SH SYNOPSIS
.br
.PP
\fC#include <iostream>\fP
.br
\fC#include <atomic>\fP
.br
\fC#include <mutex>\fP
.br

.SS "Datenstrukturen"

.in +1c
.ti -1c
.RI "class \fBvkst::logging\fP"
.br
.RI "A singleton class for logging messages at various levels\&. "
.in -1c
.SS "Namensbereiche"

.in +1c
.ti -1c
.RI "namespace \fBvkst\fP"
.br
.ti -1c
.RI "namespace \fBvkst::internal\fP"
.br
.in -1c
.SS "Makrodefinitionen"

.in +1c
.ti -1c
.RI "#define \fBLIBVKST_CONFIG_LOGGING_WARN_LEVEL\fP   1"
.br
.ti -1c
.RI "#define \fBVKST_LOG_DEBUG\fP(MSG)   \fBvkst::logging::instance\fP()\&.debug(MSG, (__FILE__), __builtin_FUNCTION())"
.br
.ti -1c
.RI "#define \fBVKST_LOG_INFO\fP(MSG)   \fBvkst::logging::instance\fP()\&.info(MSG, (__FILE__), __builtin_FUNCTION())"
.br
.ti -1c
.RI "#define \fBVKST_LOG_WARN\fP(MSG)   \fBvkst::logging::instance\fP()\&.warn(MSG, (__FILE__), __builtin_FUNCTION())"
.br
.ti -1c
.RI "#define \fBVKST_LOG_ERROR\fP(MSG)   \fBvkst::logging::instance\fP()\&.error(MSG, (__FILE__), __builtin_FUNCTION())"
.br
.ti -1c
.RI "#define \fBVKST_LOG_CRITICAL\fP(MSG)   \fBvkst::logging::instance\fP()\&.critical(MSG, (__FILE__), __builtin_FUNCTION())"
.br
.in -1c
.SS "Aufzählungen"

.in +1c
.ti -1c
.RI "enum class \fBvkst::logging_level\fP { \fBvkst::Debug\fP = 0, \fBvkst::Info\fP, \fBvkst::Warn\fP, \fBvkst::Error\fP, \fBvkst::Critical\fP }"
.br
.RI "Enum representing different logging levels\&. "
.in -1c
.SS "Funktionen"

.in +1c
.ti -1c
.RI "const char * \fBvkst::internal::level2string\fP (const \fBlogging_level\fP level)"
.br
.RI "Converts a logging level enum to a human-readable string\&. "
.in -1c
.SH "Makro-Dokumentation"
.PP 
.SS "#define LIBVKST_CONFIG_LOGGING_WARN_LEVEL   1"

.PP
Definiert in Zeile \fB12\fP der Datei \fBvkstLogging\&.hpp\fP\&.
.SS "#define VKST_LOG_CRITICAL(MSG)   \fBvkst::logging::instance\fP()\&.critical(MSG, (__FILE__), __builtin_FUNCTION())"

.PP
Definiert in Zeile \fB20\fP der Datei \fBvkstLogging\&.hpp\fP\&.
.SS "#define VKST_LOG_DEBUG(MSG)   \fBvkst::logging::instance\fP()\&.debug(MSG, (__FILE__), __builtin_FUNCTION())"

.PP
Definiert in Zeile \fB16\fP der Datei \fBvkstLogging\&.hpp\fP\&.
.SS "#define VKST_LOG_ERROR(MSG)   \fBvkst::logging::instance\fP()\&.error(MSG, (__FILE__), __builtin_FUNCTION())"

.PP
Definiert in Zeile \fB19\fP der Datei \fBvkstLogging\&.hpp\fP\&.
.SS "#define VKST_LOG_INFO(MSG)   \fBvkst::logging::instance\fP()\&.info(MSG, (__FILE__), __builtin_FUNCTION())"

.PP
Definiert in Zeile \fB17\fP der Datei \fBvkstLogging\&.hpp\fP\&.
.SS "#define VKST_LOG_WARN(MSG)   \fBvkst::logging::instance\fP()\&.warn(MSG, (__FILE__), __builtin_FUNCTION())"

.PP
Definiert in Zeile \fB18\fP der Datei \fBvkstLogging\&.hpp\fP\&.
.SH "Autor"
.PP 
Automatisch erzeugt von Doxygen für vkbst aus dem Quellcode\&.
